#!/usr/bin/env ruby

require 'thor/group'

class Pepper < Thor::Group

  class_option :length, :desc => 'Pepper length in bits, must be a multiple of 8 (preferably a power of 2)', :type => :numeric, :default => 512
  class_option :charset, :desc => 'Chacter set to use when generating pepper', :type => :string, :default => '0123456789abcdef'

  def initialize(*args, &block)
    super

    print_usage if options['length'] % 8 != 0

    pepper = ''

    length = options['length'] / 4
    charset = options['charset']
    charset_length = charset.length

    length.times do
      pepper += charset[rand(charset_length)]
    end

    puts pepper
    exit!
  end

  def self.banner
    "pepper #{self.arguments.map{ |a| a.usage }.join(' ')} [options]"
  end

  private

  def print_usage
    self.class.help(Thor::Base.shell.new)
    exit
  end

end

Pepper.start(ARGV)
