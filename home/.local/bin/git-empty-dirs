#!/usr/bin/env python2

from sys import argv
from glob import glob
from os import getcwd, listdir, unlink, utime
from os.path import exists, isdir, dirname, basename


class Util:
	@classmethod
	def check(cls, dir):
		while dir != '/' and not exists(dir + '/.git'):
			dir = dirname(dir)

		if dir == '/':
			print 'Not a git repository!'
			exit(1)

	@classmethod
	def empty(cls, dir):
		l = listdir(dir)

		if not l or l == ['.gitignore']:
			return True

		return False

	@classmethod
	def scan(cls, root, dir, cb):
		if cls.empty(dir):
			cb(dir.replace(root, '.'))
		else:
			l = listdir(dir)

			for d in l:
				f = dir + '/' + d
				if d != '.git' and isdir(f):
					cls.scan(root, f, cb)

	@classmethod
	def touch(cls, filename, time=None):
		with file(filename, 'a'):
			utime(filename, time)


def _help():
	name = basename(argv[0]).split('-', 1)

	print 'Usage: %s %s list'	% (name[0], name[1])
	print 'or:    %s %s keep'	% (name[0], name[1])
	print 'or:    %s %s remove'	% (name[0], name[1])

	exit(1)

def _list():
	def cb(dir):
		print dir

	cwd = getcwd()
	Util.check(cwd)
	Util.scan(cwd, cwd, cb)

def _keep():
	def cb(dir):
		Util.touch(dir + '/.gitignore')

	cwd = getcwd()
	Util.check(cwd)
	Util.scan(cwd, cwd, cb)

def _remove():
	def cb(dir):
		if exists(dir + '/.gitignore'):
			unlink(dir + '/.gitignore')

	cwd = getcwd()
	Util.check(cwd)
	Util.scan(cwd, cwd, cb)


def main(argv):
	if len(argv):
		command = argv[0]
	else:
		command = 'help'

	if command in ('help', 'list', 'keep', 'remove'):
		globals()['_' + command]()
	else:
		print 'Unknown command: %s\n' % command
		_help()


if __name__ == '__main__':
	main(argv[1:])
