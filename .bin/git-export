#!/bin/bash

#
# usage
#

usage() {
  echo "Usage: git export [options] [tree-ish]"
  echo ''
  echo 'Options:'
  echo '  -h, --help            Print this message and exit'
  echo '  -r, --remote=remote   Export from remote repo'
  echo '  -f, --format=format   Set output format [tar.gz tgz tar zip]'
  echo '  -o, --output=file     Set output file [stdout]'
  exit ${1}
}

#
# parse command line arguments
#

REMOTE=''
OUTPUT=''
FORMAT='tar.gz'
ARGS=()

PARSE='true'
while [[ -n "${1}" ]]; do
  if ${PARSE}; then
    case "${1}" in
      -h|--help)
        usage 0;;
      -r*)
        REMOTE="${1:2}";;
      --remote=*)
        REMOTE="${1:9}";;
      -r|--remote)
        REMOTE="${2}"; shift;;
      -f*)
        FORMAT="${1:2}";;
      --format=*)
        FORMAT="${1:9}";;
      -f|--format)
        FORMAT="${2}"; shift;;
      -o*)
        OUTPUT="${1:2}";;
      --output=*)
        OUTPUT="${1:9}";;
      -o|--output)
        OUTPUT="${2}"; shift;;
      --)
        PARSE='false';;
      -*)
        echo "${0}: invalid option: ${1}" >&2; echo >&2; usage 1 >&2;;
      *)
        ARGS+=("${1}");;
    esac
  else
    ARGS+=("${1}")
  fi

  shift
done

set -- "${ARGS[@]}"

#
# Do some actual work
#

TREE="${1}"
TREE="${TREE:-master}"

if [[ -z "${REMOTE}" ]]; then
  if [[ -z "${OUTPUT}" ]]; then
    exec git archive --format="${FORMAT}" "${TREE}"
  else
    exec git archive --format="${FORMAT}" "${TREE}" > "${OUTPUT}"
  fi
else
  if [[ -z "${OUTPUT}" ]]; then
    exec git archive --format="${FORMAT}" --remote="${REMOTE}" "${TREE}"
  else
    exec git archive --format="${FORMAT}" --remote="${REMOTE}" "${TREE}" > "${OUTPUT}"
  fi
fi
