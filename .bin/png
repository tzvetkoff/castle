#!/bin/bash

xcode=`xcode-\select -print-path`
if [[ -z "${xcode}" ]]; then
  echo "XCode not found!"
  exit 1
fi

green="\033[01;32m"
red="\033[01;31m"
none="\033[00m"
ok="[  ${green}ok${none}  ]"
fail="[ ${red}fail${none} ]"

usage() {
  echo "Usage:"
  echo "  ${0##*/} <command> <file> [file] ..."
  echo 'Commands:'
  echo '  optimize <file> [file]...       Optimizes PNG files for iPhone'
  echo '  unoptimize <file> [file]...     Reverts iPhone optimizations'
  exit 1
}

optimize() {
  name="${file%.*}"
  ext="${file##*.}"

  if [[ "${name}" = *.unoptimized ]]; then
    out="${name%.unoptimized}.${ext}"
  else
    out="${name}.optimized.${ext}"
  fi

  if "${xcode}"/Platforms/iPhoneOS.platform/Developer/usr/bin/pngcrush -iphone -f 0 -q "${1}" "${out}"; then
    echo -e "${ok} ${file}"
  else
    echo -e "${fail} ${file}"
  fi
}

unoptimize() {
  name="${file%.*}"
  ext="${file##*.}"

  if [[ "${name}" = *.optimized ]]; then
    out="${name%.optimized}.${ext}"
  else
    out="${name}.unoptimized.${ext}"
  fi

  if "${xcode}"/Platforms/iPhoneOS.platform/Developer/usr/bin/pngcrush -q -revert-iphone-optimizations "${1}" "${out}"; then
    echo -e "${ok} ${file}"
  else
    echo -e "${fail} ${file}"
  fi
}

cmd="${1}"
shift

if [[ -z "${1}" || ( "${cmd}" != optimize && "${cmd}" != unoptimize ) ]]; then
  usage
fi

for file in "${@}"; do
  ${cmd} "${file}"
done
