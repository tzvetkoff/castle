#!/bin/bash

#
# Usage
#

usage() {
  echo 'Usage:'
  echo "  ${0} [options] [LOCAL_PORT:SERVER[:REMOTE_PORT]]"
  echo
  echo 'Options:'
  echo '  -h, --help                                    Print this message and exit'
  echo '  -s SERVER, --server=SERVER                    Server (required)'
  echo '  -l LOCAL_PORT, --local-port=LOCAL_PORT        Local port (required)'
  echo "  -L LOCAL_ADDR, --local-addr=LOCAL_ADDR        Local address (optional, default: ${LOCAL_ADDR})"
  echo '  -r REMOTE_PORT, --remote-port=REMOTE_PORT     Remote port (optional, default: LOCAL_PORT)'
  echo "  -R REMOTE_ADDR, --remote-addr=REMOTE_ADDR     Remote address (optional, default: ${REMOTE_ADDR})"
  exit "${1}"
}

#
# Default values
#

SERVER=''
LOCAL_PORT=''
LOCAL_ADDR='127.0.0.1'
REMOTE_PORT=''
REMOTE_ADDR='*'

ARGS=()
PARSE='true'

#
# Parse arguments
#

while [[ -n "${1}" ]]; do
  if ${PARSE}; then
    case "${1}" in
      -h|--help) usage 0;;

      --server=*)  SERVER="${1:9}";;
      -s|--server) SERVER="${2}"; shift;;
      -s*)         SERVER="${1:2}";;

      --local-port=*)  LOCAL_PORT="${1:13}";;
      -l|--local-port) LOCAL_PORT="${2}"; shift;;
      -l*)             LOCAL_PORT="${1:2}";;

      --local-addr=*)  LOCAL_ADDR="${1:13}";;
      -L|--local-addr) LOCAL_ADDR="${2}"; shift;;
      -L*)             LOCAL_ADDR="${1:2}";;

      -r|--remote-port) REMOTE_PORT="${2}"; shift;;
      --remote-port=*)  REMOTE_PORT="${1:14}";;
      -r*)              REMOTE_PORT="${1:2}";;

      -R|--remote-addr) REMOTE_ADDR="${2}"; shift;;
      --remote-addr=*)  REMOTE_ADDR="${1:14}";;
      -R*)              REMOTE_ADDR="${1:2}";;

      --) PARSE='false';;
      -*) echo "${0}: invalid option: ${1}" >&2; echo >&2; usage 1 >&2;;
      *)  ARGS+=("${1}");;
    esac
  else
    ARGS+=("${1}")
  fi

  shift
done

#
# Positional arguments shorthand.
#

if [[ ${#ARGS[@]} -gt 1 ]]; then
  echo "${0}: wrong number of arguments (given ${#}, expected 0..1)" >&2
  echo >&2
  usage 1 >&2
fi

if [[ -n ${ARGS[0]} ]]; then
  arg="${ARGS[0]}"
  case "${arg}" in
    *:*:*)
      LOCAL_PORT="${arg%%:*}"
      SERVER="${arg%:*}"
      SERVER="${SERVER#*:}"
      REMOTE_PORT="${arg##*:}"
      ;;
    *:*)
      LOCAL_PORT="${arg%:*}"
      SERVER="${arg#*:}"
      ;;
    *)
      echo "${0}: invalid format for positional argument #1" >&2
      echo >&2
      usage 1 >&2
      ;;
  esac
fi

#
# Check settings.
#

if [[ -z "${SERVER}" ]]; then
  echo "${0}: missing required option --server" >&2
  echo >&2
  usage 1
fi

if [[ -z "${LOCAL_PORT}" ]]; then
  echo "${0}: missing required option --local-port" >&2
  echo >&2
  usage 1
fi

if [[ -z "${REMOTE_PORT}" ]]; then
  REMOTE_PORT="${LOCAL_PORT}"
fi

#
# Do the magic.
#

ssh -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -TnNR "${BIND}:${REMOTE_PORT}:${LOCAL_ADDR}:${LOCAL_PORT}" "${SERVER}"
