#!/usr/bin/env -S expect --

# Command line usage
proc usage {stream exit_code} {
  global argv0
  puts $stream "Usage:"
  puts $stream "  $argv0 <options> <ssh arguments>"
  puts $stream ""
  puts $stream "Specific options:"
  puts $stream "  --ssh-command=COMMAND     Use different SSH command"
  puts $stream "  --password=PASSWORD       Provide password as argument"
  puts $stream "  --filename=FILENAME       Read password from file"
  puts $stream "  --env=VARNAME             Password is in environment variable"
  puts $stream ""
  puts $stream "Common options:"
  puts $stream "  --help                    Show this message"
  puts $stream "  --version                 Show version"
  exit $exit_code
}

# Defaults
set ssh_command "ssh"
set password ""
set filename ""
set varname ""
set args {}
set non_option 0

# Parse arguments
for {set i 0} {$i < [llength $argv]} {incr i} {
  set arg [lindex $argv $i]
  switch -glob $arg {
    "-h" -
    "--help"          { usage stdout 0 }
    "--version"       { puts "0.1.0"; exit 0 }
    "--ssh-command"   { set ssh_command [lindex $argv $i+1]; incr i }
    "--ssh-command=*" { set ssh_command [string range $arg 14 end] }
    "--password"      { set password [lindex $argv $i+1]; incr i }
    "--password=*"    { set password [string range $arg 11 end] }
    "--filename"      { set filename [lindex $argv $i+1]; incr i }
    "--filename=*"    { set filename [string range $arg 11 end] }
    "--env"           { set varname [lindex $argv $i+1]; incr i }
    "--env=*"         { set varname [string range $arg 6 end] }
    "-*"              { lappend args $arg }
    default           { lappend args $arg; incr non_option }
  }
}

# Check if we have at least 1 non-option argument
if {$non_option == 0} {
  usage stderr 1
}

# Check SSH command
if {$ssh_command == ""} {
  puts stderr "$argv0: SSH command cannot be empty"
  puts stderr ""
  usage stderr 1
}

# Check password
if {$filename != ""} {
  if {![file readable $filename]} {
    puts stderr "$argv0: File `$filename' not readable"
    puts stderr ""
    usage stderr 1
  }

  set f [open $filename r]
  set password [string trim [read $f]]
  close $f
} elseif {$varname != ""} {
  if {![info exists "env($varname)"]} {
    puts stderr "$argv0: Environment variable `$varname' not set"
    puts stderr ""
    usage stderr 0
  }

  set password $env($varname)
}

if {$password == ""} {
  puts stderr "$argv0: Password cannot be empty"
  puts stderr ""
  usage stderr 1
}

# Trap window changes
trap {
  set rows [stty rows]
  set cols [stty columns]
  stty rows $rows columns $cols < $spawn_out(slave,name)
} WINCH

# Go!
spawn $ssh_command {*}$args
expect {
  "yes/no"    { send "yes\n"; exp_continue }
  "password"  { send "$password\n" }
}
interact
