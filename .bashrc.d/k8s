#!/bin/bash

if [[ -d "${HOME}/KubeConf" ]]; then
  #
  # bash prompt command hook
  #

  __prompt_command_k8s_hook() {
    if [[ -n ${KUBECONFIG} ]]; then
      local reset='\[\033[0m\]' grey='\[\033[1;30m\]' cyan='\[\033[0;36m\]'
      local k8s="${KUBECONFIG##*/}";
      k8s="{${grey}k8s:${cyan}${k8s%.kubeconfig}${reset}}"
      __prompt_string="${__prompt_string}${k8s}"
    fi
  }

  __prompt_command_hooks+=('__prompt_command_k8s_hook')

  #
  # create functions that activate each env
  #

  k8s--default() { echo 'Activating default k8s env...'; unset KUBECONFIG; }

  k8s--reload() {
    local __funcname __kubeconfig __kubename

    while read -r __funcname; do
      if [[ "${__funcname}" = k8s--* && "${__funcname}" != 'k8s--default' && "${__funcname}" != 'k8s--reload' ]]; then
        echo "unset -f $__funcname"
        unset -f "${__funcname}"
      fi
    done < <(declare -F | awk '{ print $3 }')

    shopt -s nullglob
    for __kubeconfig in "${HOME}/KubeConf"/*.kubeconfig; do
      __kubename="${__kubeconfig##*/}"
      __kubename="${__kubename%.*}"
      eval "k8s--${__kubename}() { echo 'Activating \"${__kubename}\" k8s env...'; export KUBECONFIG=\"${__kubeconfig}\"; }"
    done
    shopt -u nullglob
  }

  k8s--reload
fi
